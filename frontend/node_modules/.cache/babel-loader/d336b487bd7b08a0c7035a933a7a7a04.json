{"ast":null,"code":"var _jsxFileName = \"/home/labber/crowdfunding-app/frontend/src/components/RegisterForm.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { defer } from 'request/lib/helpers';\nimport './hooks/useApplicationData';\nconst RegisterForm = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const handleRegistrationSubmit = async e => {\n    e.preventDefault(); // Prevent the default form submit action (page reload)\n\n    // Construct the request payload\n    const payload = {\n      username: username,\n      password: password,\n      email: email\n    };\n    try {\n      const response = await fetch('/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        // Handle success - maybe clear form or show a success message\n      } else {\n        // Handle error - maybe display error message to the user\n      }\n    } catch (error) {\n      // Handle network error - maybe display error message to the user\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:3001/api/register', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const result = await response.json();\n    console.log(result);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Register User\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRegistrationSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }\n  }, \"Register\")));\n};\nexport default RegisterForm;","map":{"version":3,"names":["React","Link","defer","RegisterForm","username","setUsername","useState","password","setPassword","email","setEmail","handleRegistrationSubmit","e","preventDefault","payload","response","fetch","method","headers","body","JSON","stringify","ok","error","handleSubmit","data","result","json","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder"],"sources":["/home/labber/crowdfunding-app/frontend/src/components/RegisterForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { defer } from 'request/lib/helpers';\r\nimport {} from './hooks/useApplicationData';\r\n\r\n\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n\r\n  const handleRegistrationSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent the default form submit action (page reload)\r\n    \r\n    // Construct the request payload\r\n    const payload = {\r\n      username: username,\r\n      password: password,\r\n      email: email\r\n    };\r\n    \r\n    try {\r\n      const response = await fetch('/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        // Handle success - maybe clear form or show a success message\r\n      } else {\r\n        // Handle error - maybe display error message to the user\r\n      }\r\n    } catch (error) {\r\n      // Handle network error - maybe display error message to the user\r\n    }\r\n  };\r\n\r\n\r\n const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  const response = await fetch('http://localhost:3001/api/register', {\r\n    method: 'POST',\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n  const result = await response.json();\r\n  console.log(result);\r\n}\r\n\r\n  return(\r\n\r\n    <div>\r\n      <h2>Register User</h2>\r\n    \r\n    <form onSubmit={handleRegistrationSubmit}>\r\n  <input\r\n    type=\"text\"\r\n    value={username}\r\n    onChange={e => setUsername(e.target.value)}\r\n    placeholder=\"Username\"\r\n  />\r\n  <input\r\n    type=\"password\"\r\n    value={password}\r\n    onChange={e => setPassword(e.target.value)}\r\n    placeholder=\"Password\"\r\n  />\r\n  <input\r\n    type=\"email\"\r\n    value={email}\r\n    onChange={e => setEmail(e.target.value)}\r\n    placeholder=\"Email\"\r\n  />\r\n  <button type=\"submit\">Register</button>\r\n</form>\r\n    \r\n    </div>\r\n  );\r\n}\r\nexport default RegisterForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}