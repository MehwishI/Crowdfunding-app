{"version":3,"sources":["components/ProjectBox.jsx","components/UserProject.jsx","components/Home.jsx","helpers/getusersdata.js","components/RegisterForm.jsx","components/LoginForm.jsx","components/Logout.jsx","components/Donation.jsx","components/Funding.jsx","components/UserDashboard.jsx","components/CreateProject.jsx","components/TopNavigation.jsx","components/CheckoutForm.jsx","components/Checkout.jsx","App.js","reportWebVitals.js","index.js"],"names":["ProjectBox","props","selectedProject","setSelectedProject","useState","projectId","project","navigate","useNavigate","useEffect","console","log","concat","id","state","React","createElement","className","onClick","name","type","handleDonateclick","src","picture","description","created_by","funding_current","toLocaleString","style","currency","funding_target","UserProject","projectsData","projectsList","Array","isArray","map","key","Home","Cookies","get","setProjectsData","async","data","response","fetch","method","headers","Content-Type","credentials","ok","json","error","status","getAllProjects","fetchData","RegisterForm","username","setUserName","email","setEmail","password","setPassword","value","onChange","e","target","preventDefault","payload","body","JSON","stringify","Navigate","to","handleCancel","LoginForm","loginstatus","setLoginStatus","Logout","Donation","donationId","donation","project_name","funding_amount","donation_date","year","month","day","Funding","donationsData","donationsList","UserDashboard","_location$state","setDonationsData","currentUserId","useLocation","userid","getProjectsByUserId","fetchProjectsData","getDonationsByUserId","donationsdata","fetchDonationsData","Link","pathname","CreateProject","projectName","setProjectName","projectType","setProjectType","fundraisingGoal","setFundraisingGoal","onSubmit","required","TopNavigation","CheckoutForm","_ref","stripe","useStripe","elements","useElements","receiptUrl","setReceiptUrl","donationAmount","setDonationAmount","href","event","token","createToken","order","amount","source","receipt_email","charge","receipt_url","CardNumberElement","CardExpiryElement","CardCvcElement","stripePromise","loadStripe","Checkout","window","scrollTo","Elements","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","BrowserRouter","StrictMode"],"mappings":"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","file":"static/js/main.9d3759da.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ProjectBox = (props) => {\n  // console.log(\"reached project box for project:\", props);\n  const goToProjectPage = (projectId) => {\n    // Redirect to individual project page\n    // TODO: Need to know what state needs to be modified to change pages\n    //`/projects/${projectId}`\n  };\n\n  const [selectedProject, setSelectedProject] = useState(null);\n  const { projectId, project } = props;\n  const navigate = useNavigate();\n  //console.log(\"project details received: \", project);\n  const handleDonateclick = (project) => {\n    console.log(\"project after donate button click\", project);\n\n    setSelectedProject(project);\n    console.log(\"selectedProject after setstate\", selectedProject); //will not show changed state\n\n    // setSelectedProject(project);\n    // console.log(\"selectedProject after settimeout\", selectedProject); //will not show changed state\n    // navigate(\"/donate\");\n    //navigate(`/donate/${selectedProject.id}`); //redirect to checkout\n  };\n  useEffect(() => {\n    //if selected project is changed and donate butto is clicked\n    if (selectedProject) {\n      console.log(\"selectedProject inside useEffect:\", selectedProject);\n      navigate(`/donate/${selectedProject.id}`, { state: { selectedProject } });\n    }\n    //console.log();\n    // navigate(\"/donate\");\n  }, [selectedProject, navigate]);\n\n  if (project) {\n    return (\n      <div className=\"project_box\" onClick={() => goToProjectPage(project.id)}>\n        <h2 className=\"project_box_name\">{project.name || \" \"}</h2>\n        <button\n          type=\"button\"\n          className=\"project_box_donate_button\"\n          onClick={() => handleDonateclick(project)}\n        >\n          Make a donation!\n        </button>\n\n        <img className=\"project_box_pic\" src={project.picture}></img>\n\n        <p className=\"project_box_desc\">{project.description}</p>\n        <p className=\"project_created_by\">Created By: {project.created_by}</p>\n        <span className=\"project_box_funds\">\n          $\n          {(project.funding_current || \"0\").toLocaleString(\"en-US\", {\n            style: \"currency\", // This is a slower and obsolete formatting function, but it won't matter for this small a project\n            currency: \"CAD\",\n          })}{\" \"}\n          raised!\n        </span>\n        <br />\n        <span>\n          Remaining Funds: CAD $\n          {project.funding_target - project.funding_current}{\" \"}\n        </span>\n      </div>\n    );\n  } else return <div>Projects details not available now.</div>;\n};\n\nexport default ProjectBox;\n","import React from \"react\";\nimport \"./style.css\";\nimport ProjectBox from \"./ProjectBox\";\n\nconst UserProject = (props) => {\n  // console.log(\"reached userproject component:\", props.projectsData);\n  const { projectsData } = props;\n\n  if (!projectsData) {\n    return <div>Loading data..</div>;\n  }\n  // console.log(\n  //   \"if projectsDAta an array?\",\n  //   Array.isArray(props.projectsData.projectsData)\n  // );\n\n  // for (var i in projectsData) {\n  //   console.log(\"project in for loop: \", projectsData[i]);\n  // }\n  //Check if projectsData is indeed an array before calling .map\n  const projectsList = Array.isArray(projectsData)\n    ? projectsData.map((project) => (\n        <ProjectBox key={project.id} project={project} />\n      ))\n    : null;\n\n  // const projectsList = projectsData.map((project) => (\n  //   <ProjectBox key={project.id} project={project} />\n  // ));\n\n  return <div className=\"projectlist\">{projectsList}</div>;\n};\n\nexport default UserProject;\n","import React, { useEffect, useState } from \"react\";\nimport Cookies from \"js-cookie\";\n\n//import TopNavigation from \"./TopNavigation\";\n//import ProjectBox from \"./ProjectBox\";\nimport { getAllProjects } from \"../helpers/getusersdata\";\nimport \"./style.css\";\nimport UserProject from \"./UserProject\";\n\n//list of all available projects\nconst Home = () => {\n  //const cookies = new Cookies();\n  const currentUserId = Cookies.get(\"userid\");\n  const [projectsData, setProjectsData] = useState([]);\n  //state to store projectsData\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getAllProjects();\n      //console.log(\"projectsData returned by helper function\", data);\n      setProjectsData(data.projectsData); //check if its projectsdata in small letters\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"main-page\">\n      {/* <TopNavigation currentUserId={currentUserId} /> */}\n      <div className=\"center-section\">\n        {/* Placeholder for image */}\n        <div className=\"image-placeholder\">\n          <img src=\"../images/fmg-small.png\" />\n        </div>\n        <p>Welcome to FundMe! A crowdfunding app</p>\n      </div>\n      <div className=\"bottom-section\">\n        {/* Active projects will display here */}\n        <div className=\"active-projects\">\n          <span className=\"title-active-projects\">Available Projects</span>\n          <UserProject projectsData={projectsData} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","//get proejcts by user\r\nexport async function getProjectsByUserId(userid) {\r\n  try {\r\n    const response = await fetch(\r\n      `http://localhost:3001/api/projects/user/${userid}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      }\r\n    );\r\n    // const clonedResponse = response.clone();\r\n    //const responseText = await clonedResponse.text(); // This won’t consume the original response\r\n    // console.log(\"Raw response text before: \", responseText);\r\n    if (response.ok) {\r\n      // const clonedResponse = response.clone();\r\n      // const responseText = await clonedResponse.text(); // This won’t consume the original response\r\n      // console.log(\"Raw response text: \", responseText);\r\n\r\n      const projectsData = await response.json();\r\n      //console.log(\"projectsData returned from fetch: \", projectsData);\r\n      return projectsData;\r\n    } else {\r\n      console.error(\"Failed to fetch: \", response.status);\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    // console.log(\"response in case of fetch error:\", response);\r\n    console.error(\"Fetch error: \", error);\r\n    return null;\r\n  }\r\n}\r\n//get donations by user\r\n\r\nexport async function getDonationsByUserId(userid) {\r\n  try {\r\n    const response = await fetch(`http://localhost:3001/api/donations/userid`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      // dataType: \"json\",\r\n    });\r\n    if (response.ok) {\r\n      const donationsData = await response.json();\r\n      //console.log(\"donationsData from fetch: \", donationsData);\r\n      return donationsData;\r\n    } else {\r\n      console.error(\"Failed to fetch: \", response.status);\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Fetch error: \", error);\r\n    return null;\r\n  }\r\n}\r\n//get all available projects\r\nexport async function getAllProjects() {\r\n  try {\r\n    const response = await fetch(`http://localhost:3001/api/projects/`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n    // const clonedResponse = response.clone();\r\n    //const responseText = await clonedResponse.text(); // This won’t consume the original response\r\n    // console.log(\"Raw response text before: \", responseText);\r\n    if (response.ok) {\r\n      // const clonedResponse = response.clone();\r\n      // const responseText = await clonedResponse.text(); // This won’t consume the original response\r\n      // console.log(\"Raw response text: \", responseText);\r\n\r\n      const projectsData = await response.json();\r\n      //console.log(\"projectsData returned from fetch: \", projectsData);\r\n      return projectsData;\r\n    } else {\r\n      console.error(\"Failed to fetch all projects: \", response.status);\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    // console.log(\"response in case of fetch error:\", response);\r\n    console.error(\"Fetch error: \", error);\r\n    return null;\r\n  }\r\n}\r\n//export default getProjectsByUserId, getDonationsByUserId ;\r\n","import React, { useState } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\n//import { defer } from \"request/lib/helpers\";\n\nimport \"./style.css\";\n\nconst RegisterForm = () => {\n  const [username, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleRegisterSubmit = async (e) => {\n    e.preventDefault(); // Prevent the default form submit action (page reload)\n\n    // Construct the request payload\n    const payload = {\n      username: username,\n      password: password,\n      email: email,\n    };\n    console.log(\"payload-register\", payload);\n\n    try {\n      const response = await fetch(\"http://localhost:3001/api/users/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n      // console.log(\"response\",response)\n\n      if (response.ok) {\n        // Handle success - maybe clear form or show a success message\n        console.log(\"User registered successfully!\");\n        return <Navigate to=\"/projects\" />;\n      } else {\n        // Handle error - maybe display error message to the user\n        console.log(\"Unsuccessful registration\");\n        return <Navigate to=\"/\" />;\n      }\n    } catch (error) {\n      // Handle network error - maybe display error message to the user\n      return <Navigate to=\"/\" />;\n    }\n  };\n\n  const handleCancel = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div className=\"register-container\">\n      <form className=\"register-form\">\n        <div className=\"form-group\">\n          <label>User Name:</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUserName(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"button\" onClick={handleRegisterSubmit}>\n            Register\n          </button>\n          <button type=\"button\" onClick={handleCancel}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./style.css\";\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginstatus, setLoginStatus] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const handleLoginSubmit = async (e) => {\n    e.preventDefault(); // Prevent the default form submit action (page reload)\n\n    // Construct the request payload\n    const payload = {\n      // username: username,\n      password: password,\n      email: email,\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:3001/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n        body: JSON.stringify(payload),\n      });\n\n      if (response.ok) {\n        // Handle success - maybe clear form or show a success message\n\n        setLoginStatus(\"Login successful\");\n\n        //redirect to /projects\n        // <Navigate replace={true} to=\"/\" />; //this should be changes to \"/projects\"\n        navigate(\"/\");\n      } else {\n        // Handle error - maybe display error message to the user\n        console.log(\"Unsuccessful Login, Try again!\");\n        setLoginStatus(\"Login failed,Please Try again!\");\n      }\n    } catch (error) {\n      // Handle network error - maybe display error message to the user\n    }\n  };\n\n  const handleCancel = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"login-form\">\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"button\" onClick={handleLoginSubmit}>\n            Submit\n          </button>\n          <button type=\"button\" onClick={handleCancel}>\n            Cancel\n          </button>\n        </div>\n      </form>\n\n      <h3>{loginstatus}</h3>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import { useCookies } from \"react-cookie\";\r\n\r\nconst Logout = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const response = fetch(\"http://localhost:3001/api/users/logout\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n    });\r\n    if (response.ok) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      return;\r\n      console.error(response.error);\r\n    }\r\n  });\r\n};\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Donation = (props) => {\r\n  const { donationId, donation } = props;\r\n\r\n  return (\r\n    <div className=\"donation_box\">\r\n      <h2 className=\"donation_project_name\">{donation.project_name}</h2>\r\n      <span className=\"donation_box_funds\">\r\n        $\r\n        {(donation.funding_amount || \" \").toLocaleString(\"en-US\", {\r\n          style: \"currency\", // This is a slower and obsolete formatting function, but it won't matter for this small a project\r\n          currency: \"CAD\",\r\n        })}{\" \"}\r\n        raised!\r\n      </span>{\" \"}\r\n      <span>\r\n        Date:{\" \"}\r\n        {donation.donation_date.toLocaleString( {\r\n          //not working yet\r\n          year: \"numeric\",\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n        })}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Donation;\r\n","import React from \"react\";\nimport \"./style.css\";\nimport Donation from \"./Donation\";\n\nconst Funding = (props) => {\n  // console.log(\"reached funding component:\", props.donationsData);\n  const { donationsData } = props;\n\n  if (!donationsData) {\n    return <div>Loading data..</div>;\n  }\n\n  // Check if donationsData is indeed an array before calling .map\n  const donationsList = Array.isArray(donationsData)\n    ? donationsData.map((donation) => (\n        <Donation key={donation.id} donation={donation} />\n      ))\n    : null;\n  // $(funding).append(donationsList);\n\n  return <div className=\"funding\">{donationsList}</div>;\n};\n\nexport default Funding;\n","import Cookies from \"js-cookie\";\nimport React, { useState, useEffect } from \"react\";\nimport UserProject from \"./UserProject\";\nimport Funding from \"./Funding\";\n\nimport {\n  getProjectsByUserId,\n  getDonationsByUserId,\n} from \"../helpers/getusersdata\";\nimport \"./style.css\";\n\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\n//in progress (by Mehwish)\nconst UserDashboard = (props) => {\n  const [donationsData, setDonationsData] = useState([]);\n  const [projectsData, setProjectsData] = useState([]);\n\n  const location = useLocation();\n  const currentUserId = location.state?.currentUserId;\n\n  // console.log(\"currentuserid received:\", currentUserId);\n  //console.log(\"props received:\", props);\n  const navigate = useNavigate();\n  if (!currentUserId) {\n    console.log(\"user not logged in, redirecting to login page\");\n    navigate(\"/login\");\n  }\n  // if (state) {\n  //const currentUserId = state ? null : state.currentUserId;\n  // console.log(currentUserId);\n  // }\n  //const projectsData = null;\n  // getProjectsByUserId(currentUserId);\n  // console.log(\"projectsData received to UserDashboard:\", projectsData);\n  // const donationsData = getDonationsByUserId(currentUserId);\n  // console.log(\"donationsData returned: \", donationsData);\n\n  useEffect(() => {\n    const fetchDonationsData = async () => {\n      const data = await getDonationsByUserId(currentUserId);\n      // console.log(\"donationsdata in userdashboard:\", data);\n      // Assuming you have 'useState' to manage your donations state\n      // console.log(\n      //   \"if donationsData an array?\",\n      //   Array.isArray(data.donationsdata)\n      // );\n      setDonationsData(data.donationsdata);\n    };\n\n    const fetchProjectsData = async () => {\n      const data = await getProjectsByUserId(currentUserId);\n      // console.log(\"projects data:\", data);\n      // console.log(\n      //   \"if projectsData an array?\",\n      //   Array.isArray(data.projectsData)\n      // );\n\n      setProjectsData(data.projectsData);\n    };\n    fetchProjectsData();\n    fetchDonationsData();\n  }, [currentUserId]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"section\" id=\"userproject\">\n          {/* Content for the first section */}\n          <h2>My Projects</h2>\n\n          <UserProject projectsData={projectsData} />\n        </div>\n        <div className=\"section\" id=\"funded\">\n          {/* Content for the second section */}\n          <h2>What you're funding</h2>\n\n          {/*donations list*/}\n          <Funding donationsData={donationsData} />\n        </div>\n        {/* <div className=\"section\" id=\"active\">\n          {/* Content for the third section */}\n\n        {/* <h2>Active projects</h2>\n          {/* <p>content goes here</p> }\n          <ProjectBox />\n        </div> */}\n        <div className=\"section\" id=\"create\">\n          {/* Content for the fourth section */}\n          <h2>Create your own project</h2>\n          <p>\n            <button>\n              <Link\n                to={{\n                  pathname: \"/createproject\",\n                }}\n                state={{ currentUserId: currentUserId }}\n              >\n                Create a new Project!\n              </Link>\n            </button>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n","import React, { useState } from \"react\";\nimport \"./style.css\";\n\nconst CreateProject = () => {\n  // state for form inputs\n  const [projectName, setProjectName] = useState(\"\");\n  const [projectType, setProjectType] = useState(\"\");\n  const [fundraisingGoal, setFundraisingGoal] = useState(\"\");\n\n  // function for form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log({ projectName, projectType, fundraisingGoal });\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Create a New Project</h2>\n      <form onSubmit={handleSubmit}>\n        <label className=\"form-label\">\n          Project Name:\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            value={projectName}\n            onChange={(e) => setProjectName(e.target.value)}\n            required\n          />\n        </label>\n\n        <label className=\"form-label\">\n          Project Type:\n          <select\n            className=\"form-input\"\n            value={projectType}\n            onChange={(e) => setProjectType(e.target.value)}\n            required\n          >\n            <option value=\"\">Select Project Type</option>\n            <option value=\"charity\">Charity</option>\n            <option value=\"medical\">Medical</option>\n            <option value=\"personal\">Personal</option>\n          </select>\n        </label>\n\n        <label className=\"form-label\">\n          Fundraising Goal:\n          <input\n            className=\"form-input\"\n            type=\"number\"\n            value={fundraisingGoal}\n            onChange={(e) => setFundraisingGoal(e.target.value)}\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateProject;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n//import { useCookies } from \"react-cookie\";\n//import { Cookies } from \"js-cookie\";\n//import Cookies from \"universal-cookie\";\n\nconst TopNavigation = (props) => {\n  //const [cookies] = useCookies([\"userid\"]);\n  // const cookies = new Cookies();\n  const currentUserId = props.currentUserId;\n  //.get(\"userid\");\n  //Cookies.get(\"userid\");\n  //console.log(\"currentUserId:\", currentUserId);\n\n  return (\n    <div className=\"top-nav-bar\">\n      <div className=\"logo-container\"></div>\n      {!currentUserId ? (\n        <div>\n          <Link to={\"/register\"}>Register</Link>\n\n          <Link to={\"/login\"}>Login</Link>\n        </div>\n      ) : (\n        <div>\n          <Link\n            to={{\n              pathname: \"/userdashboard\",\n            }}\n            state={{ currentUserId: currentUserId }}\n          >\n            My Dashboard\n          </Link>\n          <Link to={\"/logout\"}>Logout</Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TopNavigation;\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  useStripe,\r\n  useElements,\r\n  PaymentElement,\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nimport {\r\n  CardNumberElement,\r\n  CardExpiryElement,\r\n  CardCvcElement,\r\n} from \"@stripe/react-stripe-js\";\r\n//import axios from \"axios\";\r\nimport \"./CheckoutForm.css\";\r\n\r\nconst CheckoutForm = ({ selectedProject }) => {\r\n  //  if (selectedProduct === null) history.push('/')\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [receiptUrl, setReceiptUrl] = useState(\"\");\r\n  const [donationAmount, setDonationAmount] = useState(0);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js hasn't yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n    const { token } = await stripe.createToken();\r\n\r\n    const order = await fetch(\r\n      `http://localhost:3001/api/stripe/charge/${selectedProject.id}`,\r\n      {\r\n        amount: donationAmount,\r\n        source: token.id,\r\n        receipt_email: \"customer@example.com\",\r\n      }\r\n    );\r\n\r\n    setReceiptUrl(order.data.charge.receipt_url);\r\n  };\r\n\r\n  if (receiptUrl) {\r\n    return (\r\n      <div className=\"success\">\r\n        <h2>Payment Successful!</h2>\r\n        <a href={receiptUrl}>View Receipt</a>\r\n        <Link to=\"/\">Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"checkout-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Enter Amount:</label>\r\n        <input\r\n          name=\"donationAmount\"\r\n          value={donationAmount}\r\n          onChange={setDonationAmount}\r\n        />\r\n        <label>\r\n          Card details\r\n          <CardNumberElement />\r\n        </label>\r\n        <label>\r\n          Expiration date\r\n          <CardExpiryElement />\r\n        </label>\r\n        <label>\r\n          CVC\r\n          <CardCvcElement />\r\n        </label>\r\n        <button type=\"submit\" className=\"order-button\">\r\n          Pay\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import React, { useEffect } from \"react\";\r\n//import { StripeProvider, Elements } from \"react-stripe-elements\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nconst stripePublishableKey =\r\n  \"pk_test_51OGSmrGBWq3wvvTYs1Ig4o0uCrI4vpUr2Dd0k9synE4b2F5zjkvke5y6d1nVvb4lXw4wExdaTo4gIuOQoaAy2tSE00mYzgTgDp\";\r\nconst stripePromise = loadStripe(stripePublishableKey);\r\n\r\nconst Checkout = () => {\r\n  const location = useLocation();\r\n  const selectedProject = location.state?.selectedProject;\r\n\r\n  console.log(\"selectedProject received in Checkout compoent\", selectedProject);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  // const options = {\r\n  //   // passing the client secret obtained from the server\r\n  //   clientSecret:\r\n  //     \"{{sk_test_51OGSmrGBWq3wvvTY9fL3qOZQGvTIj5987Cgxmwts8TyIIMBWg7MAoWDrDNMSm3JUq4sqRa9R8lzErgANCID7yN9A00c5tJbkP2}}\",\r\n  // };\r\n\r\n  return (\r\n    // <StripeProvider apiKey=\"pk_test_51OGSmrGBWq3wvvTYs1Ig4o0uCrI4vpUr2Dd0k9synE4b2F5zjkvke5y6d1nVvb4lXw4wExdaTo4gIuOQoaAy2tSE00mYzgTgDp\">\r\n    //   <Elements>\r\n    //     <CheckoutForm selectedProduct={selectedProduct} />\r\n    //   </Elements>\r\n    // </StripeProvider>\r\n    <Elements stripe={stripePromise}>\r\n      <CheckoutForm selectedProject={selectedProject} />\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport Logout from \"./components/Logout\";\nimport UserDashboard from \"./components/UserDashboard\";\nimport CreateProject from \"./components/CreateProject\";\nimport TopNavigation from \"./components/TopNavigation\";\nimport Cookies from \"js-cookie\";\nimport CheckoutForm from \"./components/CheckoutForm\";\nimport Checkout from \"./components/Checkout\";\n\nfunction App() {\n  const currentUserId = Cookies.get(\"userid\");\n  console.log(\"currentuserid: \", currentUserId);\n\n  return (\n    <div className=\"App\">\n      <TopNavigation currentUserId={currentUserId} />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/register\" element={<RegisterForm />} />\n        <Route path=\"/login\" element={<LoginForm />} />\n        <Route path=\"/logout\" element={<Logout />} />\n        <Route path=\"/userdashboard\" element={<UserDashboard />} />\n        <Route path=\"/createproject\" element={<CreateProject />} />\n        {/* <Route path=\"/donate\" element={<Checkout />} /> */}\n\n        <Route path=\"/donate/:projectid\" element={<Checkout />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}